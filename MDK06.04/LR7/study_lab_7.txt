{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11004378,"sourceType":"datasetVersion","datasetId":6850522}],"dockerImageVersionId":30918,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","import seaborn as sns\n","\n","import os\n","import re\n","import requests"],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:14:10.765528Z","iopub.execute_input":"2025-03-12T09:14:10.765910Z","iopub.status.idle":"2025-03-12T09:14:10.775393Z","shell.execute_reply.started":"2025-03-12T09:14:10.765882Z","shell.execute_reply":"2025-03-12T09:14:10.773637Z"},"id":"Yxll0SkT2qwz"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["# функция для загрузки документа по ссылке из гугл драйв\n","def load_csv_from_google_drive(url: str) -> pd.DataFrame:\n","    # Извлекаем идентификатор файла из URL\n","    match_ = re.search('/d/([a-zA-Z0-9-_]+)', url)\n","    if match_ is None:\n","        raise ValueError('Invalid Google Drive URL')\n","    file_id = match_.group(1)\n","    # Собираем ссылку для скачивания CSV-файла\n","    download_url = f'https://drive.google.com/uc?id={file_id}'\n","    # Читаем CSV-файл в DataFrame\n","    df = pd.read_csv(download_url)\n","    return df\n","\n","\n","new_mays_df = load_csv_from_google_drive(\n","    'https://drive.google.com/file/d/1Cwj_J2lW-_AVudzg3c16RWHkicrcqD3D/view?usp=drive_link')\n","\n","new_mays_df.head()"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:14:11.410258Z","iopub.execute_input":"2025-03-12T09:14:11.410613Z","iopub.status.idle":"2025-03-12T09:14:11.433187Z","shell.execute_reply.started":"2025-03-12T09:14:11.410580Z","shell.execute_reply":"2025-03-12T09:14:11.432193Z"},"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"j9btyAr72qw3","executionInfo":{"status":"ok","timestamp":1741775852191,"user_tz":-180,"elapsed":2163,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"e9bc3085-9f3e-4633-a0d1-2d38af0f2368"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      T     Po      P   Pa   U  Ff  ff10  ff3   N  W1    VV    Td\n","0  15.8  747.1  761.2 -0.9  70   0   0.0  0.0   5   0  20.0  10.3\n","1  21.8  748.0  761.8 -1.2  42   1   2.0  4.0   5   0  20.0   8.1\n","2  21.8  749.2  763.1 -0.3  42   1   3.0  6.0  75   0  20.0   8.4\n","3  20.8  749.5  763.4 -0.3  51   1   4.0  6.0  75   0  20.0  10.3\n","4  17.9  749.8  763.7  1.1  64   3   5.0  8.0  50   0  20.0  10.9"],"text/html":["\n","  <div id=\"df-5f56d613-e0db-451a-94db-fdb61259a502\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>T</th>\n","      <th>Po</th>\n","      <th>P</th>\n","      <th>Pa</th>\n","      <th>U</th>\n","      <th>Ff</th>\n","      <th>ff10</th>\n","      <th>ff3</th>\n","      <th>N</th>\n","      <th>W1</th>\n","      <th>VV</th>\n","      <th>Td</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15.8</td>\n","      <td>747.1</td>\n","      <td>761.2</td>\n","      <td>-0.9</td>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>10.3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>21.8</td>\n","      <td>748.0</td>\n","      <td>761.8</td>\n","      <td>-1.2</td>\n","      <td>42</td>\n","      <td>1</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>8.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.8</td>\n","      <td>749.2</td>\n","      <td>763.1</td>\n","      <td>-0.3</td>\n","      <td>42</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>6.0</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>8.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20.8</td>\n","      <td>749.5</td>\n","      <td>763.4</td>\n","      <td>-0.3</td>\n","      <td>51</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>75</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>10.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.9</td>\n","      <td>749.8</td>\n","      <td>763.7</td>\n","      <td>1.1</td>\n","      <td>64</td>\n","      <td>3</td>\n","      <td>5.0</td>\n","      <td>8.0</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>10.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f56d613-e0db-451a-94db-fdb61259a502')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f56d613-e0db-451a-94db-fdb61259a502 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f56d613-e0db-451a-94db-fdb61259a502');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8310b4bb-13c4-4327-b775-f29cb3c7dc6f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8310b4bb-13c4-4327-b775-f29cb3c7dc6f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8310b4bb-13c4-4327-b775-f29cb3c7dc6f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_mays_df","summary":"{\n  \"name\": \"new_mays_df\",\n  \"rows\": 1235,\n  \"fields\": [\n    {\n      \"column\": \"T\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.762412239192271,\n        \"min\": -3.9,\n        \"max\": 31.1,\n        \"num_unique_values\": 293,\n        \"samples\": [\n          12.7,\n          5.0,\n          -1.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Po\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.9606498534558385,\n        \"min\": 732.2,\n        \"max\": 759.6,\n        \"num_unique_values\": 240,\n        \"samples\": [\n          746.7,\n          747.4,\n          750.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.013938426958724,\n        \"min\": 745.9,\n        \"max\": 774.0,\n        \"num_unique_values\": 254,\n        \"samples\": [\n          768.9,\n          761.5,\n          764.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8122278010189248,\n        \"min\": -4.0,\n        \"max\": 3.8,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          -0.9,\n          0.2,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"U\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 12,\n        \"max\": 99,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          18,\n          70,\n          79\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1,\n          5,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ff10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3765353483472715,\n        \"min\": 0.0,\n        \"max\": 13.0,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          8.0,\n          10.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ff3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0625251394974615,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.0,\n          4.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          95,\n          75,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"W1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.7571766117267704,\n        \"min\": 1.0,\n        \"max\": 20.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Td\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.284826975788027,\n        \"min\": -11.1,\n        \"max\": 18.2,\n        \"num_unique_values\": 225,\n        \"samples\": [\n          12.3,\n          8.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}],"execution_count":null},{"cell_type":"markdown","source":["### Информация о названиях столбцов\n","\n","* T - температура воздуха\n","* Po - атмосферное давление на уровне станции\n","* P - атмосферное давление\n","* Pa - барическая тенденция\n","* U - относительная влажность\n","* DD - направление ветра\n","* Ff - скорость ветра\n","* ff10 - макс. значение порыва ветра\n","* ff3 - макс. значение порыва ветра на высоте 10-12 м\n","* N - общая облачность\n","* WW - текущая погода\n","* W1 - прошедшая погода\n","* W2 - прошедшая погода\n","* Tn - мин. температура воздуха\n","* Tx - макс. температура воздуха\n","* Cl - облака\n","* Nh - количество наблюдаемых облаков\n","* H - высота основания самых нихких облаков\n","* Cm - высоко-кучевые облака\n","* Ch - перистые облака\n","* VV - горизонтальная дальность видимости\n","* Td - температура точки росы\n","* RRR - количество выпавших осадков\n","* tR - время, за которое накопилось указанное количество осадков\n","* E - состояние поверхности почвы\n","* Tg - мин. температура поверхности почвы\n","* E' - состояние поверхности почвы\n","* sss - высота снежного покрова\n","\n","Набор данных был взят с портала rp5 (https://rp5.ru/Архив_погоды_в_Кирове).\n"],"metadata":{"id":"8f_oHhIyGykO"}},{"cell_type":"markdown","source":["Информация о наборе данных (data frame)"],"metadata":{"id":"I5m_z1oN2qw4"}},{"cell_type":"code","source":["new_mays_df.info()"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:14:11.434510Z","iopub.execute_input":"2025-03-12T09:14:11.434833Z","iopub.status.idle":"2025-03-12T09:14:11.445608Z","shell.execute_reply.started":"2025-03-12T09:14:11.434807Z","shell.execute_reply":"2025-03-12T09:14:11.444645Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"VDh-rMmm2qw5","executionInfo":{"status":"ok","timestamp":1741775855773,"user_tz":-180,"elapsed":5,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"fbdea7db-815d-46b7-e43a-60eb5ef9b846"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1235 entries, 0 to 1234\n","Data columns (total 12 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   T       1235 non-null   float64\n"," 1   Po      1235 non-null   float64\n"," 2   P       1235 non-null   float64\n"," 3   Pa      1235 non-null   float64\n"," 4   U       1235 non-null   int64  \n"," 5   Ff      1235 non-null   int64  \n"," 6   ff10    1235 non-null   float64\n"," 7   ff3     1235 non-null   float64\n"," 8   N       1235 non-null   int64  \n"," 9   W1      1235 non-null   int64  \n"," 10  VV      1235 non-null   float64\n"," 11  Td      1235 non-null   float64\n","dtypes: float64(8), int64(4)\n","memory usage: 115.9 KB\n"]}],"execution_count":null},{"cell_type":"markdown","source":["# Исследовательский анализ данных"],"metadata":{"id":"yLY8oG0E2qw_"}},{"cell_type":"markdown","source":["### Построим матрицу корреляции"],"metadata":{"id":"KCIm2Opi2qw_"}},{"cell_type":"code","source":["# посчитаем коэффициент корреляции для всего датафрейма\n","# округлим значение до сотых\n","# получается корреляционная матрица\n","corr_matrix = new_mays_df.corr().round(2)\n","corr_matrix"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:36:14.989958Z","iopub.execute_input":"2025-03-12T09:36:14.990268Z","iopub.status.idle":"2025-03-12T09:36:15.013476Z","shell.execute_reply.started":"2025-03-12T09:36:14.990243Z","shell.execute_reply":"2025-03-12T09:36:15.012148Z"},"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"G5sjSjXO2qw_","executionInfo":{"status":"ok","timestamp":1741775858788,"user_tz":-180,"elapsed":53,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"f6a846bf-9683-4dcf-d5d3-82b7000cdb81"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         T    Po     P    Pa     U    Ff  ff10   ff3     N    W1    VV    Td\n","T     1.00  0.22  0.17 -0.29 -0.62  0.17  0.16  0.14 -0.06 -0.19  0.16  0.47\n","Po    0.22  1.00  1.00  0.07 -0.34 -0.24 -0.20 -0.23 -0.28 -0.40  0.23 -0.10\n","P     0.17  1.00  1.00  0.09 -0.31 -0.25 -0.21 -0.24 -0.28 -0.39  0.23 -0.13\n","Pa   -0.29  0.07  0.09  1.00  0.25 -0.16 -0.13 -0.08 -0.08  0.04  0.05 -0.01\n","U    -0.62 -0.34 -0.31  0.25  1.00 -0.25 -0.28 -0.27  0.22  0.43 -0.35  0.38\n","Ff    0.17 -0.24 -0.25 -0.16 -0.25  1.00  0.89  0.78  0.21  0.12 -0.05 -0.09\n","ff10  0.16 -0.20 -0.21 -0.13 -0.28  0.89  1.00  0.80  0.24  0.11 -0.03 -0.14\n","ff3   0.14 -0.23 -0.24 -0.08 -0.27  0.78  0.80  1.00  0.27  0.21 -0.04 -0.15\n","N    -0.06 -0.28 -0.28 -0.08  0.22  0.21  0.24  0.27  1.00  0.38 -0.23  0.18\n","W1   -0.19 -0.40 -0.39  0.04  0.43  0.12  0.11  0.21  0.38  1.00 -0.44  0.24\n","VV    0.16  0.23  0.23  0.05 -0.35 -0.05 -0.03 -0.04 -0.23 -0.44  1.00 -0.15\n","Td    0.47 -0.10 -0.13 -0.01  0.38 -0.09 -0.14 -0.15  0.18  0.24 -0.15  1.00"],"text/html":["\n","  <div id=\"df-240bec04-efeb-452e-9c11-69da2640462a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>T</th>\n","      <th>Po</th>\n","      <th>P</th>\n","      <th>Pa</th>\n","      <th>U</th>\n","      <th>Ff</th>\n","      <th>ff10</th>\n","      <th>ff3</th>\n","      <th>N</th>\n","      <th>W1</th>\n","      <th>VV</th>\n","      <th>Td</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>T</th>\n","      <td>1.00</td>\n","      <td>0.22</td>\n","      <td>0.17</td>\n","      <td>-0.29</td>\n","      <td>-0.62</td>\n","      <td>0.17</td>\n","      <td>0.16</td>\n","      <td>0.14</td>\n","      <td>-0.06</td>\n","      <td>-0.19</td>\n","      <td>0.16</td>\n","      <td>0.47</td>\n","    </tr>\n","    <tr>\n","      <th>Po</th>\n","      <td>0.22</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>0.07</td>\n","      <td>-0.34</td>\n","      <td>-0.24</td>\n","      <td>-0.20</td>\n","      <td>-0.23</td>\n","      <td>-0.28</td>\n","      <td>-0.40</td>\n","      <td>0.23</td>\n","      <td>-0.10</td>\n","    </tr>\n","    <tr>\n","      <th>P</th>\n","      <td>0.17</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>0.09</td>\n","      <td>-0.31</td>\n","      <td>-0.25</td>\n","      <td>-0.21</td>\n","      <td>-0.24</td>\n","      <td>-0.28</td>\n","      <td>-0.39</td>\n","      <td>0.23</td>\n","      <td>-0.13</td>\n","    </tr>\n","    <tr>\n","      <th>Pa</th>\n","      <td>-0.29</td>\n","      <td>0.07</td>\n","      <td>0.09</td>\n","      <td>1.00</td>\n","      <td>0.25</td>\n","      <td>-0.16</td>\n","      <td>-0.13</td>\n","      <td>-0.08</td>\n","      <td>-0.08</td>\n","      <td>0.04</td>\n","      <td>0.05</td>\n","      <td>-0.01</td>\n","    </tr>\n","    <tr>\n","      <th>U</th>\n","      <td>-0.62</td>\n","      <td>-0.34</td>\n","      <td>-0.31</td>\n","      <td>0.25</td>\n","      <td>1.00</td>\n","      <td>-0.25</td>\n","      <td>-0.28</td>\n","      <td>-0.27</td>\n","      <td>0.22</td>\n","      <td>0.43</td>\n","      <td>-0.35</td>\n","      <td>0.38</td>\n","    </tr>\n","    <tr>\n","      <th>Ff</th>\n","      <td>0.17</td>\n","      <td>-0.24</td>\n","      <td>-0.25</td>\n","      <td>-0.16</td>\n","      <td>-0.25</td>\n","      <td>1.00</td>\n","      <td>0.89</td>\n","      <td>0.78</td>\n","      <td>0.21</td>\n","      <td>0.12</td>\n","      <td>-0.05</td>\n","      <td>-0.09</td>\n","    </tr>\n","    <tr>\n","      <th>ff10</th>\n","      <td>0.16</td>\n","      <td>-0.20</td>\n","      <td>-0.21</td>\n","      <td>-0.13</td>\n","      <td>-0.28</td>\n","      <td>0.89</td>\n","      <td>1.00</td>\n","      <td>0.80</td>\n","      <td>0.24</td>\n","      <td>0.11</td>\n","      <td>-0.03</td>\n","      <td>-0.14</td>\n","    </tr>\n","    <tr>\n","      <th>ff3</th>\n","      <td>0.14</td>\n","      <td>-0.23</td>\n","      <td>-0.24</td>\n","      <td>-0.08</td>\n","      <td>-0.27</td>\n","      <td>0.78</td>\n","      <td>0.80</td>\n","      <td>1.00</td>\n","      <td>0.27</td>\n","      <td>0.21</td>\n","      <td>-0.04</td>\n","      <td>-0.15</td>\n","    </tr>\n","    <tr>\n","      <th>N</th>\n","      <td>-0.06</td>\n","      <td>-0.28</td>\n","      <td>-0.28</td>\n","      <td>-0.08</td>\n","      <td>0.22</td>\n","      <td>0.21</td>\n","      <td>0.24</td>\n","      <td>0.27</td>\n","      <td>1.00</td>\n","      <td>0.38</td>\n","      <td>-0.23</td>\n","      <td>0.18</td>\n","    </tr>\n","    <tr>\n","      <th>W1</th>\n","      <td>-0.19</td>\n","      <td>-0.40</td>\n","      <td>-0.39</td>\n","      <td>0.04</td>\n","      <td>0.43</td>\n","      <td>0.12</td>\n","      <td>0.11</td>\n","      <td>0.21</td>\n","      <td>0.38</td>\n","      <td>1.00</td>\n","      <td>-0.44</td>\n","      <td>0.24</td>\n","    </tr>\n","    <tr>\n","      <th>VV</th>\n","      <td>0.16</td>\n","      <td>0.23</td>\n","      <td>0.23</td>\n","      <td>0.05</td>\n","      <td>-0.35</td>\n","      <td>-0.05</td>\n","      <td>-0.03</td>\n","      <td>-0.04</td>\n","      <td>-0.23</td>\n","      <td>-0.44</td>\n","      <td>1.00</td>\n","      <td>-0.15</td>\n","    </tr>\n","    <tr>\n","      <th>Td</th>\n","      <td>0.47</td>\n","      <td>-0.10</td>\n","      <td>-0.13</td>\n","      <td>-0.01</td>\n","      <td>0.38</td>\n","      <td>-0.09</td>\n","      <td>-0.14</td>\n","      <td>-0.15</td>\n","      <td>0.18</td>\n","      <td>0.24</td>\n","      <td>-0.15</td>\n","      <td>1.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-240bec04-efeb-452e-9c11-69da2640462a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-240bec04-efeb-452e-9c11-69da2640462a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-240bec04-efeb-452e-9c11-69da2640462a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2ad62022-17b6-4974-b50d-d2d603f6123e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ad62022-17b6-4974-b50d-d2d603f6123e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2ad62022-17b6-4974-b50d-d2d603f6123e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"corr_matrix","summary":"{\n  \"name\": \"corr_matrix\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"T\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39985129811726333,\n        \"min\": -0.62,\n        \"max\": 1.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.19,\n          0.22,\n          0.16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Po\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4839507550705272,\n        \"min\": -0.4,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.2,\n          0.22,\n          0.23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"P\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.48233020249868686,\n        \"min\": -0.39,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.21,\n          0.17,\n          0.23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3264443430217609,\n        \"min\": -0.29,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.16,\n          -0.29,\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"U\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.464265467423999,\n        \"min\": -0.62,\n        \"max\": 1.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -0.35,\n          0.43,\n          -0.62\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4601012734368183,\n        \"min\": -0.25,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.89,\n          0.17,\n          -0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ff10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.45927726490716486,\n        \"min\": -0.28,\n        \"max\": 1.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -0.03,\n          0.11,\n          0.16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ff3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.44713481798507426,\n        \"min\": -0.27,\n        \"max\": 1.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -0.04,\n          0.21,\n          0.14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35854398318586783,\n        \"min\": -0.28,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.24,\n          -0.06,\n          -0.23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"W1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4154105307896143,\n        \"min\": -0.44,\n        \"max\": 1.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -0.44,\n          1.0,\n          -0.19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3715283748697175,\n        \"min\": -0.44,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.03,\n          0.16,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Td\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3525878356072169,\n        \"min\": -0.15,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.09,\n          0.47,\n          0.24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}],"execution_count":null},{"cell_type":"markdown","source":["### Построим тепловую карту\n","\n","* Существенная корреляция наблюдается между признаками «Ff», «ff10», «ff3», если выбирать, например, предсказание значений в столбце «ff10», то в компанию к столбцам «Ff» и «ff3» можно добавить столбцы «U» и «N».\n","* Если попробовать предсказать температуру – столбец «T», то нужно выбрать столбцы «U», «Td», и может быть «Pa» и «Po».\n","* Проведем классификацию по столбцу «W1» (есть дождь или нет), используя все те же столбцы «Po», «Pa», «U», «N», «VV»."],"metadata":{"id":"aXs6Sf7E2qw_"}},{"cell_type":"code","source":["# для наглядности построим тепловую карту\n","import seaborn as sns\n","fig, ax = plt.subplots(figsize=(9, 6))\n","sns.heatmap(corr_matrix, cmap=\"coolwarm\", annot=True)\n","plt.show()"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:36:25.103883Z","iopub.execute_input":"2025-03-12T09:36:25.104266Z","iopub.status.idle":"2025-03-12T09:36:25.714509Z","shell.execute_reply.started":"2025-03-12T09:36:25.104236Z","shell.execute_reply":"2025-03-12T09:36:25.713244Z"},"colab":{"base_uri":"https://localhost:8080/","height":528},"id":"KGzqMFgd2qw_","executionInfo":{"status":"ok","timestamp":1741775863989,"user_tz":-180,"elapsed":1119,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"06504721-d979-406e-eb1c-ab75c17bec78"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}],"execution_count":null},{"cell_type":"markdown","source":["Сделаем выводы:\n","\n","* Хорошая корреляция наблюдается между признаками «Ff», «ff10», «ff3», если выбирать, например, предсказание значений в столбце «ff10», то в компанию к столбцам «Ff» и «ff3» можно добавить столбцы «U» и «N».\n","* Если попробовать предсказать температуру - столбец «T», то нужно выбрать столбцы «U», «Td», и может быть «Pa» и «Po».\n","* Попробуем предсказать дождь, то есть определить значение в столбце «W1». Для этого выберем столбцы «Po», «Pa», «U», «N», «VV».\n","* Проведем классификацию по столбцу «W1» (есть дождь или нет), используя все те же столбцы «Po», «Pa», «U», «N», «VV»."],"metadata":{"id":"lfgZQHdA2qxA"}},{"cell_type":"markdown","source":["### Предскажем максимальное значение порыва ветра"],"metadata":{"id":"F1kXBBfn2qxA"}},{"cell_type":"code","source":["### Задача регресии. Предскажем значения столбца ff10"],"metadata":{"trusted":true,"id":"eavSMHur2qxE"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["# отберем признаки с наиболее высокой корреляцией с целевой переменной\n","# и поместим их в переменную X\n","X = new_mays_df[['Ff', 'ff3', 'N', 'U']]\n","y = new_mays_df['ff10']"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:37:35.631796Z","iopub.execute_input":"2025-03-12T09:37:35.632123Z","iopub.status.idle":"2025-03-12T09:37:35.637415Z","shell.execute_reply.started":"2025-03-12T09:37:35.632094Z","shell.execute_reply":"2025-03-12T09:37:35.636071Z"},"id":"tywfr26B2qxE"},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":["Разобьем на обучающую и тестовую выборки:"],"metadata":{"id":"dD6vE4Fw2qxE"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# разобьем данные на обучающую и тестовую выборку\n","# размер тестовой выборки составит 30%\n","# также зададим точку отсчета для воспроизводимости\n","X_train, X_test, y_train, y_test = train_test_split(X, y,\n","                                                    test_size = 0.3,\n","                                                    random_state = 42)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:37:39.557790Z","iopub.execute_input":"2025-03-12T09:37:39.558089Z","iopub.status.idle":"2025-03-12T09:37:39.843965Z","shell.execute_reply.started":"2025-03-12T09:37:39.558069Z","shell.execute_reply":"2025-03-12T09:37:39.842806Z"},"id":"7KdSdN472qxE"},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":["Создадим и обучим модель линейной регрессии:"],"metadata":{"id":"pT5RPl5X2qxE"}},{"cell_type":"code","source":["# размерность обучающей выборки\n","print(X_train.shape, y_train.shape)\n","\n","# размерность тестовой выборки\n","print(X_test.shape, y_test.shape)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:37:47.517720Z","iopub.execute_input":"2025-03-12T09:37:47.518055Z","iopub.status.idle":"2025-03-12T09:37:47.523736Z","shell.execute_reply.started":"2025-03-12T09:37:47.518030Z","shell.execute_reply":"2025-03-12T09:37:47.522716Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"CKLcTutI2qxE","executionInfo":{"status":"ok","timestamp":1741775875724,"user_tz":-180,"elapsed":5,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"389185b7-5d7a-46d9-9baa-72329d3b9b36"},"outputs":[{"output_type":"stream","name":"stdout","text":["(864, 4) (864,)\n","(371, 4) (371,)\n"]}],"execution_count":null},{"cell_type":"code","source":["# из набора линейных моделей библиотеки sklearn импортируем линейную регрессию\n","from sklearn.linear_model import LinearRegression\n","# создадим объект этого класса и запишем в переменную model\n","model = LinearRegression()\n","\n","# обучим нашу модель\n","model.fit(X_train, y_train)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:37:58.437206Z","iopub.execute_input":"2025-03-12T09:37:58.437524Z","iopub.status.idle":"2025-03-12T09:37:58.791581Z","shell.execute_reply.started":"2025-03-12T09:37:58.437496Z","shell.execute_reply":"2025-03-12T09:37:58.790390Z"},"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"3GkukJoY2qxE","executionInfo":{"status":"ok","timestamp":1741775877940,"user_tz":-180,"elapsed":373,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"b96f750e-afc7-46d0-9601-9f01ef945e51"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":28}],"execution_count":null},{"cell_type":"markdown","source":["Сделаем предсказание порыва ветра и выведем первые пять прогнозируемых значений:"],"metadata":{"id":"KRCDog282qxF"}},{"cell_type":"code","source":["# на основе нескольких независимых переменных (Х) предскажем скоромть порыва ветра (y)\n","y_pred = model.predict(X_test)\n","\n","# выведем первые пять значений с помощью диапазона индексов\n","print(y_pred[:5])"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:38:14.312515Z","iopub.execute_input":"2025-03-12T09:38:14.312839Z","iopub.status.idle":"2025-03-12T09:38:14.318812Z","shell.execute_reply.started":"2025-03-12T09:38:14.312814Z","shell.execute_reply":"2025-03-12T09:38:14.317959Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"XH6naFyv2qxF","executionInfo":{"status":"ok","timestamp":1741775880185,"user_tz":-180,"elapsed":7,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"f5e1cfc3-8b38-42ca-88a3-c4a22197ee56"},"outputs":[{"output_type":"stream","name":"stdout","text":["[6.0893986  3.94854983 0.14329064 6.36271539 3.32081571]\n"]}],"execution_count":null},{"cell_type":"markdown","source":["Среднеквадратическая ошибка\n","\n","Оценим качество модели. В качестве метрики возьмем среднеквадратическую ошибку"],"metadata":{"id":"LI8DkHW92qxF"}},{"cell_type":"code","source":["# импортируем модуль метрик\n","from sklearn import metrics\n","\n","# выведем корень среднеквадратической ошибки\n","# сравним тестовые и прогнозные значения цен на жилье\n","print('Root Mean Squared Error (RMSE):', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:38:39.201219Z","iopub.execute_input":"2025-03-12T09:38:39.201510Z","iopub.status.idle":"2025-03-12T09:38:39.207888Z","shell.execute_reply.started":"2025-03-12T09:38:39.201486Z","shell.execute_reply":"2025-03-12T09:38:39.206549Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"9WeiI1e-2qxF","executionInfo":{"status":"ok","timestamp":1741775882034,"user_tz":-180,"elapsed":12,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"7961f4f7-ce18-4569-b62e-377d5dd6a69f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE): 1.03754691534914\n"]}],"execution_count":null},{"cell_type":"markdown","source":["Коэффициент детерминации\n","\n","Рассчитаем коэффициент детерминации (R2 или R-квадрат). R2 показывает, какая доля изменчивости целевой переменной объясняется с помощью модели"],"metadata":{"id":"PiJYzbS_2qxF"}},{"cell_type":"code","source":["# посмотрим на еще одну метрику, R2\n","print('R2:', np.round(metrics.r2_score(y_test, y_pred), 2))"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:38:45.718911Z","iopub.execute_input":"2025-03-12T09:38:45.719229Z","iopub.status.idle":"2025-03-12T09:38:45.725186Z","shell.execute_reply.started":"2025-03-12T09:38:45.719205Z","shell.execute_reply":"2025-03-12T09:38:45.723930Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"ihJtih4g2qxF","executionInfo":{"status":"ok","timestamp":1741775884068,"user_tz":-180,"elapsed":15,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"627d127b-739f-4514-d304-5f144fa5ed42"},"outputs":[{"output_type":"stream","name":"stdout","text":["R2: 0.82\n"]}],"execution_count":null},{"cell_type":"markdown","source":["### Предскажем температуру"],"metadata":{"id":"OFcqthZS2qxF"}},{"cell_type":"code","source":["### Задача регресии. Предскажем значения столбца T"],"metadata":{"trusted":true,"id":"tiWxB5Uo2qxG"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["# отберем признаки с наиболее высокой корреляцией с целевой переменной\n","# и поместим их в переменную X\n","X = new_mays_df[['U', 'Po','Td', 'Pa']]\n","y = new_mays_df['T']"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:39:26.831140Z","iopub.execute_input":"2025-03-12T09:39:26.831438Z","iopub.status.idle":"2025-03-12T09:39:26.836375Z","shell.execute_reply.started":"2025-03-12T09:39:26.831414Z","shell.execute_reply":"2025-03-12T09:39:26.835254Z"},"id":"NDbSXlcs2qxG"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# разобьем данные на обучающую и тестовую выборку\n","# размер тестовой выборки составит 30%\n","# также зададим точку отсчета для воспроизводимости\n","X_train, X_test, y_train, y_test = train_test_split(X, y,\n","                                                    test_size = 0.4,\n","                                                    random_state = 42)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:39:29.712214Z","iopub.execute_input":"2025-03-12T09:39:29.712565Z","iopub.status.idle":"2025-03-12T09:39:29.723291Z","shell.execute_reply.started":"2025-03-12T09:39:29.712512Z","shell.execute_reply":"2025-03-12T09:39:29.721731Z"},"id":"RIm8q8jh2qxG"},"outputs":[],"execution_count":null},{"cell_type":"code","source":["# из набора линейных моделей библиотеки sklearn импортируем линейную регрессию\n","from sklearn.linear_model import LinearRegression\n","# создадим объект этого класса и запишем в переменную model\n","model = LinearRegression()\n","\n","# обучим нашу модель\n","model.fit(X_train, y_train)"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:39:44.879236Z","iopub.execute_input":"2025-03-12T09:39:44.879665Z","iopub.status.idle":"2025-03-12T09:39:44.890521Z","shell.execute_reply.started":"2025-03-12T09:39:44.879637Z","shell.execute_reply":"2025-03-12T09:39:44.889416Z"},"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"GUvj_dxM2qxG","executionInfo":{"status":"ok","timestamp":1741775890567,"user_tz":-180,"elapsed":15,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"efd4928f-0c51-49c7-b328-0daffc8a6f87"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LinearRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":35}],"execution_count":null},{"cell_type":"code","source":["# на основе нескольких независимых переменных (Х) предскажем цену на жилье (y)\n","y_pred = model.predict(X_test)\n","\n","# выведем первые пять значений с помощью диапазона индексов\n","print(y_pred[:5])\n","print(y_test[:5])"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:39:48.660606Z","iopub.execute_input":"2025-03-12T09:39:48.660988Z","iopub.status.idle":"2025-03-12T09:39:48.669807Z","shell.execute_reply.started":"2025-03-12T09:39:48.660958Z","shell.execute_reply":"2025-03-12T09:39:48.668387Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"vE_pJOMF2qxG","executionInfo":{"status":"ok","timestamp":1741775892436,"user_tz":-180,"elapsed":6,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"8ab2d469-0e29-45a7-971b-1eafdb425a09"},"outputs":[{"output_type":"stream","name":"stdout","text":["[17.01645615 19.5923517  13.36344765 14.31613423 13.93026701]\n","753    15.8\n","582    17.9\n","548    12.7\n","113    12.7\n","174    14.0\n","Name: T, dtype: float64\n"]}],"execution_count":null},{"cell_type":"code","source":["# импортируем модуль метрик\n","from sklearn import metrics\n","\n","# выведем корень среднеквадратической ошибки\n","# сравним тестовые и прогнозные значения цен на жилье\n","print('Root Mean Squared Error (RMSE):', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:39:57.063062Z","iopub.execute_input":"2025-03-12T09:39:57.063417Z","iopub.status.idle":"2025-03-12T09:39:57.070643Z","shell.execute_reply.started":"2025-03-12T09:39:57.063387Z","shell.execute_reply":"2025-03-12T09:39:57.069226Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"eddY-RVZ2qxG","executionInfo":{"status":"ok","timestamp":1741775894265,"user_tz":-180,"elapsed":16,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"92f7e0fd-13c0-469f-838a-00c3081b5bd8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE): 1.2915895059204572\n"]}],"execution_count":null},{"cell_type":"code","source":["# посмотрим на еще одну метрику, R2\n","print('R2:', np.round(metrics.r2_score(y_test, y_pred), 2))"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-12T09:40:04.829709Z","iopub.execute_input":"2025-03-12T09:40:04.830053Z","iopub.status.idle":"2025-03-12T09:40:04.836489Z","shell.execute_reply.started":"2025-03-12T09:40:04.830025Z","shell.execute_reply":"2025-03-12T09:40:04.835218Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"wB3h1LYN2qxH","executionInfo":{"status":"ok","timestamp":1741775895908,"user_tz":-180,"elapsed":5,"user":{"displayName":"Pavel Andřejevič","userId":"02178124249066856632"}},"outputId":"4efa7e19-edab-4711-9420-77976c378dc8"},"outputs":[{"output_type":"stream","name":"stdout","text":["R2: 0.96\n"]}],"execution_count":null}]}